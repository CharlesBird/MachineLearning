import tensorflow as tf

# 索引
x = tf.random.normal([4, 32, 32, 3])
# print(x)

print(x[0])  # 取第一张图片

print(x[0][1])  # 取第 1 张图片的第 2 行

print(x[0][1][2])  # 取第 1 张图片，第 2 行，第 3 列的像素

print(x[0][1][2][1])  # 取第 3 张图片，第 2 行，第 1 列的像素，B 通道(第 2 个通道)颜色强度值

print(x[1, 9, 2])  # 取第 2 张图片，第 10 行，第 3 列


# 切片
print(x[1:3])  # 读取第 2,3 张图片

print(x[:, 0:28:2, 0:28:2, :])  # 表示取所有图片，隔行采样，隔列采样，所有通道信息，相当于在图片的高宽各缩放至原来的 50%
"""
start:end:step 从 start 开始读取到 end(不包含 end)，步长为 step
start:end 从 start 开始读取到 end(不包含 end)，步长为 1
start: 从 start 开始读取完后续所有元素，步长为 1
start::step 从 start 开始读取完后续所有元素，步长为 step
:end:step 从 0 开始读取到 end(不包含 end)，步长为 step
:end 从 0 开始读取到 end(不包含 end)，步长为 1
::step 每隔 step-1 个元素采样所有
:: 读取所有元素
: 读取所有元素
"""

# 为了避免出现像𝑥[: , : , : ,1]这样出现过多冒号的情况，可以使用⋯符号表示取多个维度
# 上所有的数据，其中维度的数量需根据规则自动推断：当切片方式出现⋯符号时，⋯符号
# 左边的维度将自动对齐到最左边，⋯符号右边的维度将自动对齐到最右边，此时系统再自动推断⋯符号代表的维度数量
"""
切片方式 意义
a,⋯,b a 维度对齐到最左边，b 维度对齐到最右边，中间的维度全部读取，
其他维度按 a/b 的方式读取
a,⋯ a 维度对齐到最左边，a 维度后的所有维度全部读取，a 维度按 a 方式
读取。这种情况等同于 a 索引/切片方式
⋯，b b 维度对齐到最右边，b 之前的所有维度全部读取，b 维度按 b 方式
读取
⋯ 读取张量所有数据
"""
print(x[0:2, ..., 1:])  # 读取第 1-2 张图片的 G/B 通道数据

print(x[2:, ...])  # 读取最后 2 张图片

print(x[..., :2])  # 读取 R/G 通道数据